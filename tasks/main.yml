---

- name: Install dumb init if building a container
  get_url:
    dest: /usr/bin/dumb-init
    url: https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64
    mode: 0775
    validate_certs: no
  when: ansible_env.ANSIBLE_CONTAINER is defined

- include_vars: "/src/{{ item }}"
  with_items: "{{ vars_files }}"
  when: ansible_env.ANSIBLE_CONTAINER is defined and vars_files is defined and vars_files

- name: Create the git repo SSH private key directory
  file:
    path: "{{ ansible_env.HOME}}/.ssh"
    state: directory
  tags: git

- name: Create the Github SSH private key file
  copy: src="{{ gitpitch_repo_key_src }}"
    dest="{{ ansible_env.HOME}}/.ssh/id_rsa"
    mode=0600
    owner="{{ ansible_user_id }}"
  when: gitpitch_repo_key_src is defined
  tags: git

- name: Install and configure decktape PDF printing dependency
  include: install_decktape.yml

- name: Add line to /etc/hosts file mapping local ip to specified domain
  lineinfile: 
    line: "{{ ansible_eth0.ipv4.address }} {{ domain }}"
    dest: /etc/hosts
    state: present
  when: ansible_env.ANSIBLE_CONTAINER is not defined

- name: Clone GitPitch repo
  git:
    repo: "{{ gitpitch_repo }}"
    dest: "{{ gitpitch_dir }}"
    accept_hostkey: yes
    key_file: "{{ git_key_file|default(omit) }}"
    version: "{{ gitpitch_branch|default('v'~gitpitch_release~'.0') }}"
  tags: git

- name: Run sbt on dist
  shell: "sbt dist"
  args:
    chdir: "{{ gitpitch_dir }}"
  tags: sbt
  
- name: Copy in production config file
  template:
    src: production.conf.j2
    dest: "{{ gitpitch_dir }}/conf/production.conf"
  tags: conf

- name: Copy in production startup script
  template:
    src: start_gitpitch.sh.j2
    dest: "/usr/local/bin/start_gitpitch"
    mode: 0755

- name: Create gitpitch ssl directory
  file:
    path: "{{ gitpitch_dir }}/ssl"
    state: directory

- name: Copy in custom SSL cert bundle from secrets directory
  copy:
    src: "secrets/{{ cert_bundle }}"
    dest: "{{ gitpitch_dir }}/ssl/{{ cert_bundle }}"
  when: "cert_bundle is defined and cert_bundle"

- name: Unzip target deployment
  unarchive:
    src: "{{ gitpitch_target_dir }}/{{ gitpitch_target }}.zip"
    dest: "{{ gitpitch_target_dir }}"
    remote_src: True

- name: Copy static assets to conductor if building container
  synchronize:
    src: "{{ gitpitch_asset_dir }}"
    dest: /tmp/gitpitch/ 
    mode: pull
  when: ansible_env.ANSIBLE_CONTAINER is defined